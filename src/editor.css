@layer reset, typography, controls, page, utilities;

@import url("style-layers/_reset.css") layer(reset);
@import url("style-layers/_typography.css") layer(typography);
@import url("style-layers/_controls.css") layer(controls);
@import url("style-layers/_utilities.css") layer(utilities);

@layer page {
    body {
        min-block-size: 100dvh;
        padding: 2rem;
    }

    #page-wrapper {
        max-inline-size: 1600px;
        margin-inline: auto;
    }

    h1 {
        font-size: 2.5rem;
        margin-block-end: 2rem;
        overflow-wrap: break-word;
    }

    #form-and-preview-wrapper {
        margin-block-start: 2rem;
        display: grid;
        grid-template-rows: auto;
        grid-template-columns: minmax(0, 1fr);
        gap: 3rem;
    }

    .button-toolbar {
        display: flex;
        flex-wrap: wrap;
        gap: 0.75rem;
    }

    form {
        display: flex;
        flex-direction: column;
        gap: 3rem;
    }

    label {
        font-weight: var(--fw-bold);
    }

    :is(input[type="radio"], input[type="checkbox"]) + label {
        font-weight: var(--fw-normal);
    }

    :is(label, input, textarea, select, .input-group) + .help-text {
        margin-block-start: 0.75rem;
    }

    .help-text + fieldset {
        margin-block-start: 0.75rem;
    }

    #shortcut {
        inline-size: 20ch;
    }

    #code {
        inline-size: 100ch;
        white-space: nowrap;
        font-family: var(--ff-monospace);
    }

    #placeholders {
        margin-block-start: 1rem;
        display: flex;
        flex-direction: column;
        gap: 1.5rem;

        & label {
            /* Remove the default bold styling from all labels */
            font-weight: inherit;
        }

        & li > section > p {
            margin-block-end: 0.75rem;
        }
    }

    .placeholder-inputs {
        display: flex;
        gap: 1rem;
        flex-wrap: wrap;

        /* Allow child flex items to shrink as small as required */
        & > * {
            min-inline-size: 0%;
        }
    }

    #delimiter {
        inline-size: 20ch;
    }

    #imports {
        margin-block: 1rem;
        display: flex;
        flex-direction: column;
        gap: 0.5rem;
    }

    .import {
        display: flex;
        gap: 1rem;

        /* Allow inputs to shrink as small as required */
        & > input {
            min-inline-size: 0%;
        }
    }

    #placeholder-previews {
        display: flex;
        flex-direction: column;
        gap: 0.5rem;
        margin-block-start: 1.5rem;
        list-style-position: inside;
    }

    footer {
        @media (prefers-color-scheme: light) {
            --border-color: hsl(0, 0%, 80%);
        }

        @media (prefers-color-scheme: dark) {
            --border-color: hsl(0, 0%, 30%);
        }

        margin-block-start: 3rem;
        border-block: 1px solid var(--border-color);
        padding-block: 2rem;
    }

    /* At this screen width, the preview can be displayed in a second column. */
    @media (width >= 1100px) {
        body {
            padding: 3rem;
        }

        #form-and-preview-wrapper {
            grid-template-columns: minmax(0, 1fr) minmax(0, 1fr);
            gap: 4rem;
        }

        #preview {
            position: sticky;
            inset-block-start: 3rem;
            align-self: flex-start;
        }

        footer {
            margin-block-start: 4rem;
        }
    }
}
